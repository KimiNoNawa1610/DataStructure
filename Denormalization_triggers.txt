/*Sync the player non-key attribute with its children table(s)*/

CREATE DEFINER=`cecs323sec4s77`@`10.%` TRIGGER `player_AFTER_UPDATE` AFTER UPDATE ON `player` FOR EACH ROW BEGIN
	IF NEW.pLastName !=OlD.pLastName THEN
    UPDATE sportplayer
		SET spLastName=NEW.pLastname WHERE playerID=NEW.playerID;
	END IF;
    IF NEW.pFirstName !=OlD.pFirstName THEN
    UPDATE sportplayer
		SET spFirstName=NEW.pFirstName WHERE playerID=NEW.playerID;
	END IF;
END


/*Prevent modify player non-key attribute in sportplayer table*/

CREATE DEFINER=`cecs323sec4s77`@`10.%` TRIGGER `sportplayer_BEFORE_UPDATE` BEFORE UPDATE ON `sportplayer` FOR EACH ROW BEGIN
	IF(NEW.spLastName!=OLD.spLastName OR NEW.spFirstName!=OLD.spFirstName) THEN
		SIGNAL SQLSTATE '45001'
		SET MESSAGE_TEXT='CANNOT MODIFY THE PLAYER LASTNAME OR FIRSTNAME IN SPORTPLAYER CLASS';
    END IF;
END


/*Copy value of player lastname and first name from player table into sportplayer table */

CREATE DEFINER=`cecs323sec4s77`@`10.%` TRIGGER `sportplayer_BEFORE_INSERT` BEFORE INSERT ON `sportplayer` FOR EACH ROW BEGIN
	DECLARE COUCH_COUNT INT;
    SELECT COUNT(DISTINCT employeeID) INTO COUCH_COUNT FROM SportPlayer WHERE playerID=NEW.playerID;
    IF(COUCH_COUNT >= 3 ) THEN
		SIGNAL SQLSTATE '40000'
		SET MESSAGE_TEXT='A player cannot be coached in more then 3 sport';
    END IF;
    
    IF NEW.spFirstName IS NULL or NEW.spFirstName=''THEN
		 SET NEW.spFirstName=(SELECT pFirstName FROM player WHERE player.playerID=new.playerID);
	END IF;
    
	IF NEW.spLastName IS NULL or NEW.spLastName='' THEN
         SET NEW.spLastName=(SELECT pLastName FROM player WHERE player.playerID=new.playerID);
    END IF;
END


/*If the value of lastname and firstname of a coach change, then update the coach lastname and firstname in headcoach and assistantcoach tables*/

CREATE DEFINER=`cecs323sec4s77`@`10.%` TRIGGER `coach_AFTER_UPDATE` AFTER UPDATE ON `coach` FOR EACH ROW BEGIN
	IF NEW.cLastName !=OlD.cLastName THEN
    UPDATE headcoach
		SET hcLastName=NEW.cLastname WHERE employeeID=NEW.employeeID;
	UPDATE assistantcoach
		SET acLastName=NEW.cLastname WHERE employeeID=NEW.employeeID;
	END IF;
    
    IF NEW.cFirstName !=OlD.cFirstName THEN
	UPDATE headcoach
		SET hcFirstName=NEW.cFirstname WHERE employeeID=NEW.employeeID;
	UPDATE assistantcoach
		SET acFirstName=NEW.cFirstname WHERE employeeID=NEW.employeeID;
	END IF;
END


/*Copy the value from coach table to headcoach table*/

CREATE DEFINER=`cecs323sec4s77`@`10.%` TRIGGER `headcoach_BEFORE_INSERT` BEFORE INSERT ON `headcoach` FOR EACH ROW BEGIN
	IF NEW.hcFirstName IS NULL or NEW.hcFirstName=''THEN
		 SET NEW.hcFirstName=(SELECT cFirstName FROM coach WHERE coach.employeeID=new.employeeID);
	END IF;
    
	IF NEW.hcLastName IS NULL or NEW.hcLastName='' THEN
         SET NEW.hcLastName=(SELECT cLastName FROM coach WHERE coach.employeeID=new.employeeID);
    END IF;
END



/*Prevent user from modifying last name and first name of a coach in headcoach table*/

CREATE DEFINER=`cecs323sec4s77`@`10.%` TRIGGER `headcoach_BEFORE_UPDATE` BEFORE UPDATE ON `headcoach` FOR EACH ROW BEGIN
	IF(NEW.hcLastName!=OLD.hcLastName OR NEW.hcFirstName!=OLD.hcFirstName) THEN
		SIGNAL SQLSTATE '45001'
		SET MESSAGE_TEXT='CANNOT MODIFY THE HEAD COACH LASTNAME OR FIRSTNAME IN HEADCOACH CLASS';
    END IF;
END


/*Copy the value of coach lastname and firstname from coach table to assistantcoach table*/

CREATE DEFINER=`cecs323sec4s77`@`10.%` TRIGGER `assistantcoach_BEFORE_INSERT` BEFORE INSERT ON `assistantcoach` FOR EACH ROW BEGIN
	IF NEW.acFirstName IS NULL or NEW.acFirstName=''THEN
		 SET NEW.acFirstName=(SELECT cFirstName FROM coach WHERE coach.employeeID=new.employeeID);
	END IF;
    
	IF NEW.acLastName IS NULL or NEW.acLastName='' THEN
         SET NEW.acLastName=(SELECT cLastName FROM coach WHERE coach.employeeID=new.employeeID);
    END IF;
END



/*Prevent user from modifying the lastname and firstname of a coach in assistantcoach table*/
CREATE DEFINER=`cecs323sec4s77`@`10.%` TRIGGER `assistantcoach_BEFORE_UPDATE` BEFORE UPDATE ON `assistantcoach` FOR EACH ROW BEGIN
	IF(NEW.acLastName!=OLD.acLastName OR NEW.acFirstName!=OLD.acFirstName) THEN
		SIGNAL SQLSTATE '45001'
		SET MESSAGE_TEXT='CANNOT MODIFY THE HEAD COACH LASTNAME OR FIRSTNAME IN ASSISTANT COACH CLASS';
    END IF;
END
